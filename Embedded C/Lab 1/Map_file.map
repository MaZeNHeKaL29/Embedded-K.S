
Allocating common symbols
Common symbol       size              file

string_buffer2      0x64              app.o

Memory Configuration

Name             Origin             Length             Attributes
Mem              0x00000000         0x04000000         xrw
*default*        0x00000000         0xffffffff

Linker script and memory map

                0x00010000                . = 0x10000

.startup        0x00010000       0x10
 startup.o(.text)
 .text          0x00010000       0x10 startup.o
                0x00010000                reset

.text           0x00010010       0x68
 *(.text)
 .text          0x00010010       0x18 app.o
                0x00010010                main
 .text          0x00010028       0x50 uart.o
                0x00010028                UART_Send_string

.glue_7         0x00010078        0x0
 .glue_7        0x00000000        0x0 linker stubs

.glue_7t        0x00010078        0x0
 .glue_7t       0x00000000        0x0 linker stubs

.vfp11_veneer   0x00010078        0x0
 .vfp11_veneer  0x00000000        0x0 linker stubs

.v4_bx          0x00010078        0x0
 .v4_bx         0x00000000        0x0 linker stubs

.iplt           0x00010078        0x0
 .iplt          0x00000000        0x0 startup.o

.data           0x00010078       0x64
 *(.data)
 .data          0x00010078        0x0 startup.o
 .data          0x00010078       0x64 app.o
                0x00010078                string_buffer
 .data          0x000100dc        0x0 uart.o

.igot.plt       0x000100dc        0x0
 .igot.plt      0x00000000        0x0 startup.o

.rodata         0x000100dc       0x64
 *(.rodata)
 .rodata        0x000100dc       0x64 app.o
                0x000100dc                string_buffer3

.rel.dyn        0x00010140        0x0
 .rel.iplt      0x00000000        0x0 startup.o

.bss            0x00010140       0x64
 *(.bss)
 .bss           0x00010140        0x0 startup.o
 .bss           0x00010140        0x0 app.o
 .bss           0x00010140        0x0 uart.o
 *(COMMON)
 COMMON         0x00010140       0x64 app.o
                0x00010140                string_buffer2
                0x000111a4                . = (. + 0x1000)
                0x000111a4                stack_top = .
LOAD app.o
LOAD uart.o
LOAD startup.o
OUTPUT(lab1.elf elf32-littlearm)

.ARM.attributes
                0x00000000       0x2e
 .ARM.attributes
                0x00000000       0x22 startup.o
 .ARM.attributes
                0x00000022       0x32 app.o
 .ARM.attributes
                0x00000054       0x32 uart.o

.comment        0x00000000       0x11
 .comment       0x00000000       0x11 app.o
                                 0x12 (size before relaxing)
 .comment       0x00000000       0x12 uart.o

.debug_line     0x00000000       0xd8
 .debug_line    0x00000000       0x3a startup.o
 .debug_line    0x0000003a       0x4b app.o
 .debug_line    0x00000085       0x53 uart.o

.debug_info     0x00000000      0x201
 .debug_info    0x00000000       0x64 startup.o
 .debug_info    0x00000064       0xe5 app.o
 .debug_info    0x00000149       0xb8 uart.o

.debug_abbrev   0x00000000       0xf4
 .debug_abbrev  0x00000000       0x14 startup.o
 .debug_abbrev  0x00000014       0x77 app.o
 .debug_abbrev  0x0000008b       0x69 uart.o

.debug_aranges  0x00000000       0x60
 .debug_aranges
                0x00000000       0x20 startup.o
 .debug_aranges
                0x00000020       0x20 app.o
 .debug_aranges
                0x00000040       0x20 uart.o

.debug_loc      0x00000000       0x58
 .debug_loc     0x00000000       0x2c app.o
 .debug_loc     0x0000002c       0x2c uart.o

.debug_str      0x00000000       0xff
 .debug_str     0x00000000       0xd4 app.o
                                0x10d (size before relaxing)
 .debug_str     0x000000d4       0x2b uart.o
                                 0xf8 (size before relaxing)

.debug_frame    0x00000000       0x54
 .debug_frame   0x00000000       0x2c app.o
 .debug_frame   0x0000002c       0x28 uart.o
